# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-02-29 08:11
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='PortalUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=30, unique=True, validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter a valid username. This value may contain only letters, numbers and @/./+/-/_ characters.')], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('authenticated', models.BooleanField(default=False)),
                ('roles', models.CharField(choices=[('SA', '\u7cfb\u7edf\u7ba1\u7406\u5458'), ('PU', '\u7528\u6237'), ('PA', '\u79df\u6237\u7ba1\u7406\u5458'), ('AD', '\u8d85\u7ea7\u7ba1\u7406\u5458')], default='AD', max_length=2)),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AuthenticateEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('authenticate_email_code', models.CharField(max_length=64, unique=True)),
                ('authenticate_email_date', models.DateTimeField(auto_now=True)),
                ('portal_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AuthenticateEmailTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(blank=True, choices=[(0, '\u7b49\u5f85\u53d1\u9001'), (1, '\u5df2\u53d1\u9001')], default=0)),
                ('authenticate_email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_email', to='portal.AuthenticateEmail')),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_id', models.CharField(blank=True, max_length=64, unique=True)),
                ('company_name', models.CharField(blank=True, max_length=64, unique=True)),
                ('company_address', models.CharField(max_length=254)),
                ('company_contact_person', models.CharField(max_length=254)),
                ('company_contact_phone', models.CharField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_openstack_id', models.CharField(blank=True, max_length=64, unique=True)),
                ('project_openstack_domain_id', models.CharField(max_length=254)),
                ('project_openstack_domain_name', models.CharField(max_length=254)),
                ('project_name', models.CharField(blank=True, max_length=254)),
                ('project_cpu_quota', models.IntegerField(blank=True)),
                ('project_mem_quota', models.IntegerField(blank=True)),
                ('project_store_quota', models.IntegerField(blank=True)),
                ('project_ip_quota', models.IntegerField(blank=True)),
                ('project_quota_latest_update', models.DateTimeField(blank=True)),
                ('project_company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_company', to='portal.Company', to_field='company_id')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectAdmin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('portal_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_admin_user', to=settings.AUTH_USER_MODEL)),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='project_admin_project', to='portal.Project', to_field='project_openstack_id')),
            ],
        ),
        migrations.CreateModel(
            name='ResourceOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource_order_apply_date', models.DateTimeField(auto_now=True)),
                ('resource_order_latest_update_date', models.DateTimeField(blank=True)),
                ('resource_status', models.IntegerField(blank=True, choices=[(2, '\u521b\u5efa\u4e2d'), (0, '\u7b49\u5f85\u5904\u7406'), (3, '\u521b\u5efa\u5b8c\u6210'), (1, '\u62d2\u7edd')], default=0)),
                ('portal_project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_project', to='portal.Project')),
                ('portal_project_admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_to', to=settings.AUTH_USER_MODEL)),
                ('portal_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_from', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ResourceOrderDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource_type', models.IntegerField()),
                ('resource_quantity', models.IntegerField(blank=True)),
                ('resource_unit', models.CharField(blank=True, max_length=254)),
                ('resource_order_apply_date', models.DateTimeField(auto_now=True)),
                ('resource_order_latest_update_date', models.DateTimeField(blank=True)),
                ('resource_order_detail_status', models.IntegerField(blank=True, choices=[(2, '\u521b\u5efa\u4e2d'), (0, '\u7b49\u5f85\u5904\u7406'), (3, '\u521b\u5efa\u5b8c\u6210'), (1, '\u62d2\u7edd')], default=0)),
                ('resource_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.ResourceOrder')),
            ],
        ),
        migrations.CreateModel(
            name='WorkOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word_order_subject', models.CharField(blank=True, max_length=254)),
                ('work_order_status', models.IntegerField(blank=True, choices=[(1, '\u5904\u7406\u5b8c\u6210'), (0, '\u5904\u7406\u4e2d')], default=0)),
                ('create_date', models.DateTimeField(auto_now=True)),
                ('latest_modify_date', models.DateTimeField(auto_now=True)),
                ('portal_project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.Project')),
                ('portal_project_admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portal_user_work_order_to', to=settings.AUTH_USER_MODEL)),
                ('portal_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portal_user_work_order_from', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WorkOrderDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_order_index', models.IntegerField(blank=True)),
                ('create_date', models.DateTimeField(auto_now=True)),
                ('work_order_type', models.IntegerField(blank=True, choices=[(1, '\u56de\u590d'), (0, '\u53d1\u8d77')], default=0)),
                ('work_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.WorkOrder')),
            ],
        ),
        migrations.AddField(
            model_name='portaluser',
            name='company',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='portal_user_company', to='portal.Company', to_field='company_id'),
        ),
        migrations.AddField(
            model_name='portaluser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='portaluser',
            name='project',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='portal_user_project', to='portal.Project', to_field='project_openstack_id'),
        ),
        migrations.AddField(
            model_name='portaluser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
